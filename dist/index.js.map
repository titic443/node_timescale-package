{"version":3,"sources":["../src/index.ts","../src/function.ts"],"sourcesContent":["import { TimeScaleSequalize } from \"./function\";\n\nexport { TimeScaleSequalize };\n","import { Dialect, QueryOptions, Sequelize } from \"sequelize\";\n\ninterface CustomSequalizeOpt {\n  dialect?: Dialect;\n  host: string;\n  port: number;\n  username: string;\n  password: string;\n  database: string;\n  query?: QueryOptions;\n}\n\nexport class TimeScaleSequalize extends Sequelize {\n  constructor(options?: CustomSequalizeOpt) {\n    super(options);\n  }\n\n  async addConstraint(\n    table: string,\n    constraintName: string,\n    constraint1?: string,\n    constraint2?: string\n  ) {\n    try {\n      if (constraint2) {\n        await this.query(\n          `\n            ALTER TABLE public.${table}\n            ADD CONSTRAINT ${constraintName} UNIQUE (\"${constraint1}\", \"${constraint2}\");\n            `,\n          {\n            raw: true,\n          }\n        );\n      } else {\n        await this.query(\n          `\n              ALTER TABLE public.${table}\n              ADD CONSTRAINT ${constraintName} UNIQUE (\"${constraint1}\");\n              `,\n          {\n            raw: true,\n          }\n        );\n      }\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async createHyperTable(table: string, constraint: string, interval?: number) {\n    try {\n      if (interval) {\n        await this.query(\n          `SELECT create_hypertable('${table}', '${constraint}', chunk_time_interval => INTERVAL '${interval.toString()} hour');`,\n          {\n            raw: true,\n          }\n        );\n      } else {\n        await this.query(\n          `SELECT create_hypertable('${table}', '${constraint}');`,\n          {\n            raw: true,\n          }\n        );\n      }\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,uBAAiD;AAY1C,IAAM,qBAAN,cAAiC,2BAAU;AAAA,EAChD,YAAY,SAA8B;AACxC,UAAM,OAAO;AAAA,EACf;AAAA,EAEA,MAAM,cACJ,OACA,gBACA,aACA,aACA;AACA,QAAI;AACF,UAAI,aAAa;AACf,cAAM,KAAK;AAAA,UACT;AAAA,iCACuB,KAAK;AAAA,6BACT,cAAc,aAAa,WAAW,OAAO,WAAW;AAAA;AAAA,UAE3E;AAAA,YACE,KAAK;AAAA,UACP;AAAA,QACF;AAAA,MACF,OAAO;AACL,cAAM,KAAK;AAAA,UACT;AAAA,mCACyB,KAAK;AAAA,+BACT,cAAc,aAAa,WAAW;AAAA;AAAA,UAE3D;AAAA,YACE,KAAK;AAAA,UACP;AAAA,QACF;AAAA,MACF;AAAA,IACF,SAAS,KAAK;AACZ,YAAM;AAAA,IACR;AAAA,EACF;AAAA,EAEA,MAAM,iBAAiB,OAAe,YAAoB,UAAmB;AAC3E,QAAI;AACF,UAAI,UAAU;AACZ,cAAM,KAAK;AAAA,UACT,6BAA6B,KAAK,OAAO,UAAU,uCAAuC,SAAS,SAAS,CAAC;AAAA,UAC7G;AAAA,YACE,KAAK;AAAA,UACP;AAAA,QACF;AAAA,MACF,OAAO;AACL,cAAM,KAAK;AAAA,UACT,6BAA6B,KAAK,OAAO,UAAU;AAAA,UACnD;AAAA,YACE,KAAK;AAAA,UACP;AAAA,QACF;AAAA,MACF;AAAA,IACF,SAAS,KAAK;AACZ,YAAM;AAAA,IACR;AAAA,EACF;AACF;","names":[]}